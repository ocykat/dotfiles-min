prompt_git() {
    local s='';
    local branchName='';

    # Check if the current directory is in a Git repository.
    if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

        # check if the current directory is in .git before running git checks
        if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

            # Ensure the index is up to date.
            git update-index --really-refresh -q &>/dev/null;

            # Check for uncommitted changes in the index.
            if ! $(git diff --quiet --ignore-submodules --cached); then
                s+='+';
            fi;

            # Check for unstaged changes.
            if ! $(git diff-files --quiet --ignore-submodules --); then
                s+='!';
            fi;

            # Check for untracked files.
            if [ -n "$(git ls-files --others --exclude-standard)" ]; then
                s+='?';
            fi;

            # Check for stashed files.
            if $(git rev-parse --verify refs/stash &>/dev/null); then
                s+='$';
            fi;

        fi;

        # Get the short symbolic ref.
        # If HEAD isnâ€™t a symbolic ref, get the short SHA for the latest commit
        # Otherwise, just give up.
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
            git rev-parse --short HEAD 2> /dev/null || \
            echo '(unknown)')";

        [ -n "${s}" ] && s=" [${s}]";

        echo -e "${1}${branchName}${2}${s}";
    else
        return;
    fi;
}

# PS1:
# \h: hostname up to the first .
# \n: newline
# \s: name of shell
# \t: current time (24-hour format)
# \u: username
# \w: working dir
# \W: base name of working dir
#
# For 255-color chart: https://jonasjacek.github.io/colors/

bold=$(tput bold)
green=$(tput setaf 10)
gold=$(tput setaf 184)
orange=$(tput setaf 166)
purple=$(tput setaf 129)
turquoise=$(tput setaf 31)
white=$(tput setaf 15)
reset=$(tput sgr0)

PS1="\[${bold}\]\n";
PS1+="\[${purple}\]\u";
PS1+="\[${white}\]@";
PS1+="\[${orange}\]cs17";
PS1+="\[${white}\] in ";
PS1+="\[${green}\]\w"; # working directory
PS1+="\$(prompt_git \"\[${white}\] on \[${turquoise}\]\" \"\[${gold}\]\")"; # Git repository details
PS1+="\n"
PS1+="\[${white}\]\$ \[${reset}\]";
export PS1;
